@*@model PowerWorkFlow.Domain.Entities.UserWorkFlowStepsFieldFile*@

@{
    Layout = null;
}

<style type="text/css">
    .TABLE_AREA_HEADER {
        background-color: #A0C7F4;
        font-weight: bold;
        text-align: center;
    }

    .CONTROL_TEXT {
        color: #000000;
        font-family: "Verdana";
        font-size: 8pt;
        font-weight: normal;
    }

    .TABLE_AREA_BODY {
        padding: 2px;
    }

    .form-group {
        font-family: "Verdana";
        font-size: 8pt;
        font-weight: normal;
        padding-bottom: 2px;
        padding-left: 2px;
        padding-right: 2px;
    }

    body {
        padding: 30px;
    }

    form {
        display: block;
        margin: 20px auto;
        border-radius: 10px;
        padding: 15px;
    }

    .progress {
        position: relative;
        width: 400px;
        border: 1px solid #ddd;
        padding: 1px;
        border-radius: 3px;
    }

    .bar {
        background-color: #B4F5B4;
        width: 0%;
        height: 20px;
        border-radius: 3px;
    }

    .percent {
        position: absolute;
        display: inline-block;
        top: 3px;
        left: 48%;
    }
</style>
<fieldset>
    @using (Html.BeginForm("AddFiles", "Client", FormMethod.Post, new { enctype = "multipart/form-data", id = "MyForm" }))
    {
        @Html.AntiForgeryToken()

        <div>
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.RowId)
            <div class="form-group">
                @Html.LabelFor(model => model.FileName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="text-box single-line" data-val="true" style="width:300px" data-val-required="Please enter FileName" id="FileName" name="FileName" type="file" value="" />
                    @Html.ValidationMessageFor(model => model.FileName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FileType, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FileType)
                    @Html.ValidationMessageFor(model => model.FileType)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Created, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Created)
                    @Html.ValidationMessageFor(model => model.Created)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Expiration, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Expiration)
                    @Html.ValidationMessageFor(model => model.Expiration)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div class="progress">
        <div class="bar"></div>
        <div class="percent">0%</div>
    </div>

    <div id="status"></div>

</fieldset>

<script>
    (function () {

        var bar = $('.bar');
        var percent = $('.percent');
        var status = $('#status');

        $('#MyForm').ajaxForm({
            beforeSend: function () {
                status.empty();
                var percentVal = '0%';
                bar.width(percentVal)
                percent.html(percentVal);
            },
            uploadProgress: function (event, position, total, percentComplete) {
                var percentVal = percentComplete + '%';
                bar.width(percentVal)
                percent.html(percentVal);
            },
            success: function () {
                var percentVal = '100%';
                bar.width(percentVal)
                percent.html(percentVal);

                $('#layer2').dialog('close');
                // reload doesn't work if called from here
                $("#jqgFiles").trigger("reloadGrid");
            },
            complete: function (xhr) {
                status.html(xhr.responseText);
            }
        });

    })();
</script>
